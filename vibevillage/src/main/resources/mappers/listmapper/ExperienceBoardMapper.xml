<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.co.vibevillage.experienceAndReviewBoard.listmapper.ExperienceBoardMapper">

    <!-- 게시글 목록 조회 (페이지네이션 포함) -->
    <select id="findAllWithPagination" resultType="kr.co.vibevillage.experienceAndReviewBoard.domain.ExperienceBoard">
        <![CDATA[
            SELECT * FROM (
            SELECT
            ROWNUM AS rn,
            R_ID as rId,
            U_NO as uNo,
            CATEGORY_ID as categoryId,
            R_TITLE as rTitle,
            R_CONTENT as rContent,
            R_CREATED_AT as rCreatedAt,
            R_UPDATED_AT as rUpdatedAt,
            R_VIEW_COUNT as rViewCount,
            R_LIKE_COUNT as rLikeCount
            FROM REVIEWS
            WHERE ROWNUM <= #{offset} + #{limit}
            )
            WHERE rn > #{offset}
          ]]>
    </select>

    <!-- 게시글 삽입 -->

    <insert id="insertPost" parameterType="kr.co.vibevillage.experienceAndReviewBoard.dto.ExperienceBoardDTO">
        INSERT INTO REVIEWS (R_ID, U_NO, CATEGORY_ID, R_TITLE, R_CONTENT, R_CREATED_AT)
        VALUES (#{rId}, #{uNo}, #{categoryId}, #{rTitle}, #{rContent}, CURRENT_TIMESTAMP)
    </insert>

<!--    <insert id="insertPost" parameterType="kr.co.vibevillage.experienceAndReviewBoard.domain.ExperienceBoard" useGeneratedKeys="true" keyProperty="rId">-->
<!--        INSERT INTO REVIEWS (U_NO, CATEGORY_ID, R_TITLE, R_CONTENT, R_CREATED_AT, R_VIEW_COUNT, R_LIKE_COUNT)-->
<!--        VALUES (#{uNo}, #{categoryId}, #{rTitle}, #{rContent}, CURRENT_TIMESTAMP, 0, 0)-->
<!--    </insert>-->

    <!-- 게시글 수정 -->
    <update id="updatePost" parameterType="kr.co.vibevillage.experienceAndReviewBoard.domain.ExperienceBoard">
        UPDATE REVIEWS
        SET R_TITLE = #{rTitle}, R_CONTENT = #{rContent}, R_UPDATED_AT = CURRENT_TIMESTAMP
        WHERE R_ID = #{rId}
    </update>

    <!-- 게시글 삭제 -->
    <delete id="deletePost" parameterType="long">
        DELETE FROM REVIEWS WHERE R_ID = #{rId}
    </delete>

    <!-- 게시글 검색 -->
    <select id="searchPosts" parameterType="String" resultType="kr.co.vibevillage.experienceAndReviewBoard.dto.ExperienceBoardDTO">
        SELECT R_ID as rId, U_NO as uNo, CATEGORY_ID as categoryId, R_TITLE as rTitle, R_CONTENT as rContent,
               R_CREATED_AT as rCreatedAt, R_UPDATED_AT as rUpdatedAt, R_VIEW_COUNT as rViewCount, R_LIKE_COUNT as rLikeCount
        FROM REVIEWS
        WHERE R_TITLE LIKE '%' || #{keyword} || '%'
           OR R_CONTENT LIKE '%' || #{keyword} || '%'
    </select>

    <select id="findById" resultType="kr.co.vibevillage.experienceAndReviewBoard.domain.ExperienceBoard">
        SELECT
            R_ID as rId,
            U_NO as uNo,
            CATEGORY_ID as categoryId,
            R_TITLE as rTitle,
            R_CONTENT as rContent,
            R_CREATED_AT as rCreatedAt,
            R_UPDATED_AT as rUpdatedAt,
            R_VIEW_COUNT as rViewCount,
            R_LIKE_COUNT as rLikeCount
        FROM REVIEWS
        WHERE R_ID = #{rId}
    </select>

    <select id="findOtherPosts" resultType="kr.co.vibevillage.experienceAndReviewBoard.dto.ExperienceBoardDTO">
        SELECT * FROM REVIEWS WHERE R_ID != #{excludeId} ORDER BY R_CREATED_AT DESC
    </select>

    <update id="incrementViewCount" parameterType="long">
        UPDATE REVIEWS
        SET R_VIEW_COUNT = R_VIEW_COUNT + 1
        WHERE R_ID = #{rId}
    </update>

    <select id="getPostsWithCommentCount" resultType="kr.co.vibevillage.experienceAndReviewBoard.dto.ExperienceBoardDTO">
        SELECT
            r.R_ID as rId,
            r.R_TITLE as rTitle,
            (SELECT COUNT(*) FROM R_COMMENTS c WHERE c.R_ID = r.R_ID) AS commentCount
        FROM
            REVIEWS r
    </select>

</mapper>
